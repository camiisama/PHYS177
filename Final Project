import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation

#Given initial constants
L = 100.    #in centimeters
d = 10.     #in centimeters
N = 100     #number of bins     
a = L/N     #spacing
C = 1.      #velocity constant
v = 100     #in miliseconds
sigma = 0.3       
h = 1e-4    #spacing apart 
epsilon = h/1000

#initial starting velocity of the string
def velocity(x):
    return C * ((x*(L-x))/L**2) * np.exp(-(x - d)**2/(2 * sigma**2)) 

#boundaries of the equation    
Dbound = 0.0    

#times at which to take values
t1 = 0.5
t2 = 0.75
t3 = 1
t4 = 3.5
t5 = 5.6
tfinal = t5 + epsilon

#makes empty arrays
D = np.zeros([101])
x = np.linspace(0,L,N+1)
Dp = velocity(x)
Dt = np.zeros([101])
Dpt = np.zeros([101])

#initial time
t = 0.0

#loop that creates new values to plug into array
while (t < tfinal):

    #Calculate values
    Dpt[1:N] = Dp[1:N] + h * D[1:N]
    Dt[1:N] = D[1:N] + h * (v**2/d**2) *(Dp[2:N+1] + Dp[0:N-1] - 2.*Dp[1:N])
    D,Dt = Dt,D
    Dp,Dpt = Dpt,Dp
    t += h

    #plots at each values
    if abs(t - t1) < epsilon:
        plt.plot(D,color = 'red')
    if abs(t - t2) < epsilon:
        plt.plot(D,color = 'orange')
    if abs(t - t3) < epsilon:
        plt.plot(D,color = 'green')
    if abs(t - t4) < epsilon:
        plt.plot(D,color = 'blue')
    if abs(t - t5) < epsilon:
        plt.plot(D,color = 'purple')

#plots the function
plt.xlabel("Distance")
plt.ylabel("Amplitude")
plt.show()
